<?php
/**
 * @file
 * Installation file for the Matchchat module.
 */

/**
 * Implements hook_init().
 */
function matchchat_init() {
  drupal_add_library('matchchat', 'matchchat_js');
}

/**
 * Implements hook_library().
 */
function matchchat_library() {
  $libraries['matchchat_js'] = array(
    'title' => 'Matchchat JS Library',
    'website' => 'http://matchchat.com/',
    'version' => '1.0',
    'js' => array(
      drupal_get_path('module', 'matchchat') . '/matchchat.js' => array(),
    )
  );
  return $libraries;
}

/**
 * Implements hook_html_head_alter().
 */
function matchchat_html_head_alter(&$elements) {
  $nid = 0;
  if (drupal_is_front_page()) {
    $front_url = variable_get('site_frontpage', 'node');
    $front_url = drupal_get_normal_path($front_url);
    $front_url = trim($front_url, '/');
    $front = explode('/', $front_url);
    if ( count($front) > 1 && $front[0]=='node' && ctype_digit($front[1]) ) {
      $nid = $front[1];
    }
  }
  else {
    if (arg(0) == 'node' && is_numeric(arg(1))) $nid = arg(1);
  }
  //add meta tag to HTML
  $elements['matchchat_post_id'] = array(
    '#type' => 'html_tag',
    '#tag' => 'meta',
    '#attributes' => array(
      'name' => 'mcPostID',
      'content' => $nid,
    )
  );
}

/**
 * Implements hook_block_info().
 */
function matchchat_block_info() {
  $blocks = array();
  $blocks['matchchat'] = array(
    'info' => t('Matchchat comments area'),
    'cache' => DRUPAL_CACHE_PER_ROLE,
  );
 
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function matchchat_block_view($delta='') {
  $block = array();
 
  switch ($delta) {
    case 'matchchat' :
      $block['subject'] = '';
      $block['content'] = matchchat_block_html();
      break;
  }
 
  return $block;
}

/**
 * HTML for comments
 */
function matchchat_block_html() {
  $block = array(
    'content' => array(
      '#prefix' => '<div id="mccomments">',
      '#suffix' => '</div>',
      '#type' => 'markup'
    )
  );
  return $block;
}